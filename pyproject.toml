[tool.ruff]
# Enable Pyflakes ('F'), pycodestyle ('E'), isort ('I'), flake8 naming conventions ('N')
# and a subset of the pydocstyle rules ('D').
select = ["E", "F", "I", "N", "D", "PL"]
ignore = [
    "D203",  # 'one-blank-line-before-class' conflicts with D211 'no-blank-line-before-class'
    "D213",  # Multi-line docstring should start at the second line
    "E501",  # Line too long (will be handled by formatter)
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["E", "F", "I", "N", "D"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "tests",  # Exclude tests from strict linting
]

# Same as Black.
line-length = 100

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

# Configure isort rules for correct import sorting
[tool.ruff.isort]
known-first-party = ["src"]

# Configure naming conventions to match your style guide
[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Allow magic values and prints in tests
"tests/**/*.py" = ["PLR2004", "T201"]

# pydocstyle settings for game dev
[tool.ruff.pydocstyle]
convention = "google"  # Use Google docstring style

# Game dev specific mypy settings
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Optional type hints for now
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
strict_optional = true

# Per-module options:
[[tool.mypy.overrides]]
module = "pygame.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true
